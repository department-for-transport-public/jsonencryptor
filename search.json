[{"path":"https://department-for-transport-public.github.io/jsonencryptor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Francesca Bryden. Author, maintainer.","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryden F (2024). jsonencryptor: Secure Encryption json service token keys. R package version 0.1.1, https://department--transport-public.github.io/jsonencryptor/.","code":"@Manual{,   title = {jsonencryptor: Secure Encryption of json service token keys},   author = {Francesca Bryden},   year = {2024},   note = {R package version 0.1.1},   url = {https://department-for-transport-public.github.io/jsonencryptor/}, }"},{"path":"https://department-for-transport-public.github.io/jsonencryptor/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Secure Encryption of json service token keys","text":"install package directly github run: remotes::install_github(\"department--transport-public/jsonencryptor\")","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/index.html","id":"generating-a-secure-password","dir":"","previous_headings":"","what":"Generating a secure password","title":"Secure Encryption of json service token keys","text":"can either create password get package generate , using secret_pw_gen() function. use password development Cloud R use encrypt json file, assign local variable Sys.setenv(\"GARGLE_PASSWORD\" = your_password). use rsconnect, navigate dashboard publisher permissions , select vars tab. Create new variable name GARGLE_PASSWORD value password, making sure don’t use quotation marks either.","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/index.html","id":"encrypting-a-json-key-with-your-password","dir":"","previous_headings":"","what":"Encrypting a json key with your password","title":"Secure Encryption of json service token keys","text":"generated password saved local variable, can encrypt saved json service key token. Use secret_write() function , passing three arguments: name encrypted output file. function always save folder called inst/secret. filepath input unencrypted json file. (Optional) dir (directory) want write . default working directory, can change particularly working shiny apps (working directory inside folder structure). service key token fully encrypted fine treat like text object (e.g. can upload Github publish rsconnect).","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/index.html","id":"unencrypting-your-json-key-to-use-it","dir":"","previous_headings":"","what":"Unencrypting your json key to use it","title":"Secure Encryption of json service token keys","text":"unencrypt json key, use secret_read() function, passing file name encrypted json key inside inst/secret folder. function can used directly inside gargle function authenticate access big query e.g.: bq_auth(path = secret_read(\"my_access_token.json\")) similar googleCloudStorageR function authenticate access GCS: gcs_auth(secret_read(\"my_access_token.json\")) locally rsconnect need set password variable work.","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_pw_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a very secure random password — secret_pw_gen","title":"Create a very secure random password — secret_pw_gen","text":"Create secure random password","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_pw_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a very secure random password — secret_pw_gen","text":"","code":"secret_pw_gen()"},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_pw_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract password in raw format from an environment object — secret_pw_get","title":"Extract password in raw format from an environment object — secret_pw_get","text":"Extract password raw format environment object","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_pw_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract password in raw format from an environment object — secret_pw_get","text":"","code":"secret_pw_get(env_name)"},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_pw_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract password in raw format from an environment object — secret_pw_get","text":"env_name Name password variable either local environment rsconnect. Passed string.","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in password protected json file from the folder inst/secret — secret_read","title":"Read in password protected json file from the folder inst/secret — secret_read","text":"Read password protected json file folder inst/secret","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in password protected json file from the folder inst/secret — secret_read","text":"","code":"secret_read(path)"},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in password protected json file from the folder inst/secret — secret_read","text":"path File name encrypted json key","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write out password protected json file to the folder inst/secret — secret_write","title":"Write out password protected json file to the folder inst/secret — secret_write","text":"Write password protected json file folder inst/secret","code":""},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write out password protected json file to the folder inst/secret — secret_write","text":"","code":"secret_write(name, input, dir = getwd())"},{"path":"https://department-for-transport-public.github.io/jsonencryptor/reference/secret_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write out password protected json file to the folder inst/secret — secret_write","text":"input File name original unencrypted json key dir Location save inst/secret folder . Defaults current working directory path File name encrypted json key","code":""}]
